{"name":"Excel2entity","tagline":"Excel2Entity对Java POI对xls文件的读取进行了封装，实现了批量导入Excel中的数据时自动根据Excel中的数据行创建对应的Java POJO实体对象。","body":"Excel2Entity\r\n====\r\n\r\nExcel2Entity对`Java POI`对`xls`文件的读取进行了封装，实现了批量导入Excel中的数据时自动根据Excel中的数据行创建对应的`Java POJO`实体对象。\r\n\r\n该类库也实现了在创建实体对象时对字段类型进行校验，可以对Excel中的数据类型合法性进行校验，通过实现扩展接口，可以实现自定义校验规则以及自定义实体对象字段类型等更加复杂的校验规则和字段类型转换。\r\n\r\n###依赖\r\n\r\nExcel2Entity依赖于`Apache POI`类库。\r\n\r\n###使用说明\r\n\r\n####普通实体创建\r\n\r\n        ExcelHelper eh = ExcelHelper.readExcel(\"111.xls\");\r\n        List<Demo> entitys  = null;\r\n        try {\r\n            entitys = eh.toEntitys(Demo.class);\r\n            for (Demo d : entitys) {\r\n                System.out.println(d.toString());\r\n            }\r\n        } catch (ExcelParseException e) {\r\n            System.out.println(e.getMessage());\r\n        } catch (ExcelContentInvalidException e) {\r\n            System.out.println(e.getMessage());\r\n        } catch (ExcelRegexpValidFailedException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n\r\n####注册新的字段类型\r\n\r\n注册的新的字段类型类必须实现ExcelType抽象类。\r\n\r\n\tExcelHelper.registerNewType(MyDataType.class);\r\n\r\n\r\n####实体对象\r\n\r\n实体类必须标注@ExcelEntity注解， 同时需要填充的字段标注@ExcelProperty注解\r\n\r\n    @ExcelEntity\r\n    public class Demo {\r\n        @ExcelProperty(value=\"Name\", rule=MyStringCheckRule.class)\r\n        private String name;\r\n\r\n        @ExcelProperty(\"Sex\")\r\n        private String sex;\r\n            // 基于正则表达式的字段校验\r\n        @ExcelProperty(value=\"Age\", regexp=\"^[1-4]{1}[0-9]{1}$\", regexpErrorMessage=\"年龄必须在10-49岁之间\")\r\n        private int age;\r\n\r\n        @ExcelProperty(value=\"Tel\")\r\n        private Long tel;\r\n\r\n        @ExcelProperty(\"创建时间\")\r\n        private Timestamp createDate;\r\n\r\n        @ExcelProperty(value=\"Name\", required=true)\r\n        private MyDataType name2;\r\n\r\n\r\n    ... [get/set方法]\r\n    }\r\n\r\n####自定义校验规则\r\n\r\n自定义校验规则必须实现ExcelRule接口\r\n\r\n    public class MyStringCheckRule implements ExcelRule<String> {\r\n            // 字段检查\r\n        public void check(Object value, String columnName, String fieldName) throws ExcelContentInvalidException {\r\n            String val = (String) value;\r\n            System.out.println(\"-------->   检测的列名为  \" + columnName + \"， 填充的字段名为 \" + fieldName );\r\n            if(val.length() > 10){\r\n                throw new ExcelContentInvalidException(\"内容超长!\");\r\n            }\r\n        }\r\n            // 结果修改\r\n        public String filter(Object value, String columnName, String fieldName) {\r\n            String val = (String) value;\r\n            return \"[[[[\" + val + \"]]]\";\r\n        }\r\n\r\n    }\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}